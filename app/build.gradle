apply plugin: 'com.android.application'
// 依赖插件脚本 热更新
//apply from: 'tinker-support.gradle'
def keystoreFilepath = ''
def keystorePSW = ''
def keystoreAlias = ''
def keystoreAliasPSW = ''
// default keystore file, PLZ config file path in local.properties
def keyfile = file('s.keystore.temp')

Properties properties = new Properties()
// local.properties file in the root director
properties.load(project.rootProject.file('local.properties').newDataInputStream())
keystoreFilepath = properties.getProperty("keystore.path")

if (keystoreFilepath) {
    keystorePSW = properties.getProperty("keystore.password")
    keystoreAlias = properties.getProperty("keystore.alias")
    keystoreAliasPSW = properties.getProperty("keystore.alias_password")
    keyfile = file(keystoreFilepath)
}
android {
    compileSdkVersion 22
    buildToolsVersion '25.0.0'

    defaultConfig {
        applicationId "com.szmy.pigapp"
        minSdkVersion 15
//        targetSdkVersion 19
        versionCode 564
        versionName "1.5.20.564"
        multiDexEnabled true
        //热更新
//        ndk {
//            //设置支持的SO库架构
//            abiFilters 'armeabi' //, 'x86', 'armeabi-v7a', 'x86_64', 'arm64-v8a'
//        }
    }
    // 这个是解决lint报错的代码
    lintOptions {
        abortOnError false
        checkReleaseBuilds false
    }
    signingConfigs {
        myConfig {
            storeFile keyfile
            storePassword keystorePSW
            keyAlias keystoreAlias
            keyPassword keystoreAliasPSW
            println("====== signingConfigs.release ======")
        }
    }
    buildTypes {
        debug {
            println("====== buildTypes.debug ======")
            signingConfig signingConfigs.debug
        }
        release {
            minifyEnabled false
            //是否移除无用资源
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            if (keyfile.exists()) {
                println("WITH -> buildTypes -> release: using jks key")
                signingConfig signingConfigs.myConfig
            }else {
                println("WITH -> buildTypes -> release: using default key")
            }
            applicationVariants.all {variant ->
                variant.outputs.each{output ->
                    def outputFile = output.outputFile
                    if (outputFile != null && outputFile.name.endsWith('.apk')) {
                        // 输出apk名称为pigapp_v1.0_wandoujia.apk
                        def fileName = "pigapp_v${defaultConfig.versionName}.apk"
                        output.outputFile = new File(outputFile.parent, fileName)
                    }
                }
            }
        }
    }
    dexOptions {
        incremental true
        javaMaxHeapSize "4g"
    }
    sourceSets {
        main {
            jniLibs.srcDir 'libs'
        }
    }


}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:appcompat-v7:22.2.1'
    compile 'com.android.support:multidex:1.0.1'
    compile 'in.srain.cube:grid-view-with-header-footer:1.0.12'
    compile 'com.android.support:recyclerview-v7:22.2.1'
    //    compile 'com.android.support:support-v4:22.2.1'
    //热更新
    //    compile 'com.tencent.bugly:crashreport_upgrade:1.3.1'
    //    compile 'com.tencent.bugly:nativecrashreport:latest.release' //其中latest.release指代最新版本号，也可以指定明确的版本号，例如2.2.0
}
//allprojects {
//    repositories {
//        maven { url 'https://jitpack.io' }
//    }
//}
